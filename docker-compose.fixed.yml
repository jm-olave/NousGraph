services:
  # Next.js Frontend
  frontend:
    build:
      context: ./ui
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./ui:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - medical-classifier

  # FastAPI Backend
  backend:
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./api:/app
      - uploads:/app/uploads
    environment:
      - DATABASE_URL=postgresql://classifier:password@db:5432/medical_classifier
      - UPLOAD_DIR=/app/uploads
      - MODEL_URL=http://model:8080
    depends_on:
      db:
        condition: service_healthy
      model:
        condition: service_healthy
    networks:
      - medical-classifier
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PostgreSQL Database
  db:
    image: postgres:13-alpine
    environment:
      - POSTGRES_DB=medical_classifier
      - POSTGRES_USER=classifier
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - medical-classifier
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U classifier -d medical_classifier"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Model Service
  model:
    build:
      context: ./model
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - model_cache:/app/cache
      # Montar directorio del modelo si existe
      - ./model/my_medical_model:/app/my_medical_model:ro
    environment:
      - MODEL_PATH=/app/my_medical_model
    networks:
      - medical-classifier
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 60s
      timeout: 30s
      retries: 3
      start_period: 120s

volumes:
  postgres_data:
  uploads:
  model_cache:

networks:
  medical-classifier:
    driver: bridge